{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport UserSlice from '../slices/UserSlice';\nexport const client = axios.create({\n  baseURL: \"https://localhost:7222/api/\",\n  headers: {\n    'Content-Type': 'application/json',\n    'responseType': 'json'\n  }\n});\nexport const AppStore = configureStore({\n  reducer: {\n    user: UserSlice.reducer\n  }\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"sources":["C:/dev/Scrabex/ConfigPortal_react/portal-react-ts/src/state/AppStore.tsx"],"names":["configureStore","axios","useDispatch","UserSlice","client","create","baseURL","headers","AppStore","reducer","user","useAppDispatch"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAIA,OAAO,MAAMC,MAAM,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE,6BADsB;AAE/BC,EAAAA,OAAO,EAAE;AACL,oBAAgB,kBADX;AAEL,oBAAgB;AAFX;AAFsB,CAAb,CAAf;AAOP,OAAO,MAAMC,QAAQ,GAAGR,cAAc,CAAC;AACnCS,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEP,SAAS,CAACM;AADX;AAD0B,CAAD,CAA/B;AAQP,OAAO,MAAME,cAAc,GAAG;AAAA;;AAAA,SAAMT,WAAW,EAAjB;AAAA,CAAvB;;GAAMS,c;UAAuBT,W","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport axios from 'axios';\r\nimport thunk from 'redux-thunk'\r\nimport { useDispatch } from 'react-redux';\r\nimport UserSlice from '../slices/UserSlice';\r\nimport { createStore, applyMiddleware } from '@reduxjs/toolkit'\r\nimport axiosMiddleware from 'redux-axios-middleware';\r\n\r\nexport const client = axios.create({\r\n    baseURL: \"https://localhost:7222/api/\",\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'responseType': 'json'\r\n}});\r\n\r\nexport const AppStore = configureStore({\r\n    reducer: {\r\n        user: UserSlice.reducer\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof AppStore.getState>;\r\nexport type AppDispatch = typeof AppStore.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();"]},"metadata":{},"sourceType":"module"}