{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\Scrabex\\\\ConfigPortal_react\\\\portal-react-ts\\\\src\\\\components\\\\LegalViewer.tsx\";\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LegalViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setAgreed = e => {\n      let checkbox = document.getElementById('register-consent'); //todo\n\n      if (!(checkbox !== null && checkbox !== void 0 && checkbox.checked)) {\n        checkbox === null || checkbox === void 0 ? void 0 : checkbox.click();\n      }\n    };\n\n    this.state = {\n      consentGiven: props.consentGiven\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      id: \"consent-modal\",\n      tabIndex: -1,\n      role: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: \"Terms of service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"modal\",\n              \"aria-label\": \"Close\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Modal body text goes here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: () => this.setAgreed,\n              children: \"I Agree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default LegalViewer;","map":{"version":3,"sources":["C:/dev/Scrabex/ConfigPortal_react/portal-react-ts/src/components/LegalViewer.tsx"],"names":["React","LegalViewer","Component","constructor","props","setAgreed","e","checkbox","document","getElementById","checked","click","state","consentGiven","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAYA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA8E;AAC1EC,EAAAA,WAAW,CAACC,KAAD,EAA0B;AACjC,UAAMA,KAAN;;AADiC,SAIrCC,SAJqC,GAIgCC,CAAD,IAA4C;AAC5G,UAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAf,CAD4G,CAE5G;;AACA,UAAG,EAAEF,QAAF,aAAEA,QAAF,eAAEA,QAAD,CAAgCG,OAAjC,CAAH,EACA;AACIH,QAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,KAAV;AACH;AACJ,KAXoC;;AAEjC,SAAKC,KAAL,GAAa;AAACC,MAAAA,YAAY,EAAET,KAAK,CAACS;AAArB,KAAb;AACH;;AASDC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAC,eAA1B;AAA0C,MAAA,QAAQ,EAAE,CAAC,CAArD;AAAwD,MAAA,IAAI,EAAC,QAA7D;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,IAAI,EAAC,UAAnC;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,OAFZ;AAGE,8BAAa,OAHf;AAIE,4BAAW,OAJb;AAAA,qCAME;AAAM,+BAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAeE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE;AACA,cAAA,IAAI,EAAC,QADL;AAEA,cAAA,SAAS,EAAC,iBAFV;AAGA,cAAA,OAAO,EAAI,MAAM,KAAKT,SAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA+BH;;AA7CyE;;AAgD9E,eAAeJ,WAAf","sourcesContent":["import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\ninterface LegalViewerProps {\r\n    consentGiven: boolean\r\n}\r\n \r\ninterface LegalViewerState {\r\n    consentGiven: boolean\r\n}\r\n \r\nclass LegalViewer extends React.Component<LegalViewerProps, LegalViewerState> {\r\n    constructor(props: LegalViewerProps) {\r\n        super(props);\r\n        this.state = {consentGiven: props.consentGiven };\r\n    };\r\n    setAgreed : React.MouseEventHandler<HTMLInputElement, MouseEvent> = (e : React.MouseEvent<HTMLInputElement>) => {\r\n        let checkbox = document.getElementById('register-consent');\r\n        //todo\r\n        if(!(checkbox as HTMLInputElement)?.checked)\r\n        {\r\n            checkbox?.click();\r\n        }\r\n    };\r\n    render() { \r\n        return (\r\n          <div className=\"modal\" id='consent-modal' tabIndex={-1} role=\"dialog\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\">Terms of service</h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <p>Modal body text goes here.</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button \r\n                  type=\"button\" \r\n                  className=\"btn btn-primary\"\r\n                  onClick = {() => this.setAgreed}\r\n                  >\r\n                    I Agree\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default LegalViewer;"]},"metadata":{},"sourceType":"module"}