{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst anonUser = {\n  accessLevel: 0,\n  userTitle: \"anon\",\n  login: \"anon\",\n  countryCode: \"NA\",\n  createdAt: new Date(),\n  email: \"\",\n  forgotPassword: false,\n  lastUpdate: new Date(),\n  password: \"\",\n  id: 0\n};\nconst UserSlice = createSlice({\n  name: 'user',\n  initialState: {\n    currentUser: anonUser,\n    accessToken: \"\"\n  },\n  reducers: {\n    signIn(state, action) {\n      state.currentUser = action.payload;\n      state.accessToken;\n    },\n\n    signOut(state, action) {\n      state.currentUser = anonUser;\n    },\n\n    authenticate(state, action) {\n      state.accessToken = action.payload.token;\n    },\n\n    register(state, action) {}\n\n  }\n});\n/*export const TrySignIn = createAsyncThunk<User, LoginDto>(\r\n    'user/signIn',\r\n    async (credentials, { rejectWithValue }) => {\r\n        const response = await client //fetch(\"https://localhost:7222/Api/login\",)\r\n    }\r\n)\r\n*/\n\nexport const {\n  signIn,\n  register,\n  signOut\n} = UserSlice.actions;\nexport default UserSlice;","map":{"version":3,"sources":["C:/dev/Scrabex/ConfigPortal_react/portal-react-ts/src/slices/UserSlice.tsx"],"names":["createSlice","anonUser","accessLevel","userTitle","login","countryCode","createdAt","Date","email","forgotPassword","lastUpdate","password","id","UserSlice","name","initialState","currentUser","accessToken","reducers","signIn","state","action","payload","signOut","authenticate","token","register","actions"],"mappings":"AAAA,SAASA,WAAT,QAA2E,kBAA3E;AAMA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,WAAW,EAAG,CADD;AAEbC,EAAAA,SAAS,EAAG,MAFC;AAGbC,EAAAA,KAAK,EAAG,MAHK;AAIbC,EAAAA,WAAW,EAAG,IAJD;AAKbC,EAAAA,SAAS,EAAG,IAAIC,IAAJ,EALC;AAMbC,EAAAA,KAAK,EAAG,EANK;AAObC,EAAAA,cAAc,EAAG,KAPJ;AAQbC,EAAAA,UAAU,EAAG,IAAIH,IAAJ,EARA;AASbI,EAAAA,QAAQ,EAAG,EATE;AAUbC,EAAAA,EAAE,EAAG;AAVQ,CAAjB;AAYA,MAAMC,SAAS,GAAGb,WAAW,CAC7B;AACIc,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAEf,QADH;AAEVgB,IAAAA,WAAW,EAAE;AAFH,GAFlB;AAMIC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAqC;AACvCD,MAAAA,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACC,OAA3B;AACAF,MAAAA,KAAK,CAACH,WAAN;AACH,KAJK;;AAKNM,IAAAA,OAAO,CAACH,KAAD,EAAQC,MAAR,EACP;AACID,MAAAA,KAAK,CAACJ,WAAN,GAAoBf,QAApB;AACH,KARK;;AASNuB,IAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,EACZ;AACID,MAAAA,KAAK,CAACH,WAAN,GAAoBI,MAAM,CAACC,OAAP,CAAeG,KAAnC;AACH,KAZK;;AAaNC,IAAAA,QAAQ,CAACN,KAAD,EAAQC,MAAR,EAA4C,CAEnD;;AAfK;AANd,CAD6B,CAA7B;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAM;AAACF,EAAAA,MAAD;AAASO,EAAAA,QAAT;AAAmBH,EAAAA;AAAnB,IAA8BV,SAAS,CAACc,OAA9C;AAEP,eAAed,SAAf","sourcesContent":["import { createSlice, PayloadAction, createAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as React from 'react';\r\nimport { User, LoginDto, RegisterDto, AuthenticationResponse } from '../types/UserTypes';\r\nimport { RootState } from '../state/AppStore';  \r\n\r\n\r\nconst anonUser = {\r\n    accessLevel : 0, \r\n    userTitle : \"anon\",\r\n    login : \"anon\",\r\n    countryCode : \"NA\",\r\n    createdAt : new Date(),\r\n    email : \"\",\r\n    forgotPassword : false,\r\n    lastUpdate : new Date(),\r\n    password : \"\",\r\n    id : 0 } as User;\r\n\r\nconst UserSlice = createSlice(\r\n{\r\n    name: 'user',\r\n    initialState: {\r\n        currentUser: anonUser,\r\n        accessToken: \"\"\r\n    },\r\n    reducers: {\r\n        signIn(state, action: PayloadAction<User>) {\r\n            state.currentUser = action.payload;\r\n            state.accessToken \r\n        },\r\n        signOut(state, action: PayloadAction)\r\n        {\r\n            state.currentUser = anonUser;\r\n        },\r\n        authenticate(state, action: PayloadAction<AuthenticationResponse>)\r\n        {\r\n            state.accessToken = action.payload.token\r\n        },\r\n        register(state, action: PayloadAction<RegisterDto>) {\r\n\r\n        }\r\n    }\r\n});\r\n\r\n/*export const TrySignIn = createAsyncThunk<User, LoginDto>(\r\n    'user/signIn',\r\n    async (credentials, { rejectWithValue }) => {\r\n        const response = await client //fetch(\"https://localhost:7222/Api/login\",)\r\n    }\r\n)\r\n*/\r\nexport const {signIn, register, signOut} = UserSlice.actions;\r\n\r\nexport default UserSlice;\r\n"]},"metadata":{},"sourceType":"module"}