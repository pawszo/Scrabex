[{"C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\index.tsx":"1","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\reportWebVitals.ts":"2","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\Browser.tsx":"3","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\ToolBox.tsx":"4","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\WorkSpace.tsx":"5","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\RegisterForm.tsx":"6","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\LoginForm.tsx":"7","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\LegalViewer.tsx":"8","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\state\\AppStore.tsx":"9","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\slices\\UserSlice.tsx":"10","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\hooks\\UseForm.tsx":"11"},{"size":590,"mtime":1649637601556,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1648821237708,"results":"14","hashOfConfig":"13"},{"size":1062,"mtime":1649102383858,"results":"15","hashOfConfig":"13"},{"size":3268,"mtime":1649637051097,"results":"16","hashOfConfig":"13"},{"size":1284,"mtime":1649636367385,"results":"17","hashOfConfig":"13"},{"size":4641,"mtime":1649710045219,"results":"18","hashOfConfig":"13"},{"size":3238,"mtime":1649730634911,"results":"19","hashOfConfig":"13"},{"size":2844,"mtime":1649121531825,"results":"20","hashOfConfig":"13"},{"size":705,"mtime":1649728836060,"results":"21","hashOfConfig":"13"},{"size":1962,"mtime":1649756126907,"results":"22","hashOfConfig":"13"},{"size":526,"mtime":1649711228165,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"saexup",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":1,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\index.tsx",[],[],"C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\reportWebVitals.ts",[],[],["62","63"],"C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\Browser.tsx",["64","65"],[],"import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\ninterface BrowserProps {\r\n    \r\n}\r\n \r\ninterface BrowserState {\r\n    body: string\r\n}\r\n \r\nclass Browser extends React.Component<BrowserProps, BrowserState> {\r\n    constructor(props: BrowserProps) {\r\n        super(props);\r\n        this.state = {body :  '<div>READY</div>'};\r\n    }\r\n    render() { \r\n        return (  \r\n            <div className='container-fluid flex-fill' id='browser'>\r\n                <div className='mt-3 mb-3 ml-5 mr-5 d-flex row'>\r\n                    <input className=\"form-control\" type=\"text\" placeholder=\"website url\"/>\r\n                </div>\r\n                <div className=\"flex-fill row ml-5 mr-5\" style={\r\n                    {height: '70vh' }\r\n                    }>\r\n                        <div className=\"flex-fill\" id='browser-display' style={\r\n                    { backgroundColor: 'red' }\r\n                    }></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Browser;","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\ToolBox.tsx",["66","67","68","69","70","71"],[],"C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\WorkSpace.tsx",["72"],[],"C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\RegisterForm.tsx",["73"],[],"import * as React from 'react';\r\nimport { Form, Stack, Button, Tooltip } from 'react-bootstrap'\r\nimport LegalViewer from './LegalViewer';\r\nimport UserService from '../functions/UserService'\r\n\r\ninterface RegisterFormProps {\r\n    \r\n}\r\n \r\ninterface RegisterFormState {\r\n    isConsent : boolean,\r\n    isEmailValid : boolean,\r\n    isLoginValid : boolean\r\n}\r\n \r\nconst RegisterForm = () => {\r\n  const [login, setLogin] = React.useState(\"\");\r\n  const [isConsent, setConsent] = React.useState(\"\");\r\n\r\n    };\r\n\r\n    handleConsentChange = (e : React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState((state, props) => {\r\n            return {isConsent: e.target.checked};\r\n        });\r\n    };\r\n\r\n    const submitForm = (data : FieldValues) => {\r\n      let dto : LoginDto = {login: data.login, forgotPassword: data.forgotPassword, password: data.password};\r\n      UserService.SignIn(dto);\r\n    }\r\n\r\n    render() { \r\n        return (\r\n          <div\r\n            id=\"register-form\"\r\n            className=\"d-flex justify-content-center mt-3\"\r\n          >\r\n            <LegalViewer consentGiven={this.state.isConsent}/>\r\n            <form className=\"border rounded border-primary\">\r\n              <Stack gap={0} direction=\"horizontal\" className=\"m-5\">\r\n                <h1 className=\"d-flex justify-content-center\">Sign up</h1>\r\n                <hr />\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"register-email\"\r\n                  placeholder=\"Email\" \r\n                  data-toggle='tooltip'\r\n                  title=\"Must be a valid email address. e.g. 'name@example.com'\"\r\n                  required\r\n                /><br/>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"register-login\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"5 or more characters. Must be unique. e.g. 'JohnDoe12'\"\r\n                  minLength={5}\r\n                  placeholder='Login'\r\n                  required\r\n                />\r\n                <br />\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"register-password\"\r\n                  placeholder=\"Password\"\r\n                  data-toggle=\"tooltip\"\r\n                  minLength={10}\r\n                  title=\"10 or more characters. Must contain letters, digits and special characters.\"\r\n                  required\r\n                />\r\n                <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"register-country\"\r\n                  placeholder=\"Your country code\"\r\n                  title=\"Examples: UK, BG, PL, CZ, SK, CH, CA, CN\"\r\n                  maxLength={3}\r\n                  required\r\n                />\r\n                <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control d-flex\"\r\n                  id=\"register-title\"\r\n                  placeholder=\"Title\"\r\n                  title=\"Name, Fullname or company\"\r\n                  required\r\n                /><br/>\r\n                <div className=\"form-check ml-2\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id=\"register-consent\"\r\n                    onChange={this.handleConsentChange}\r\n                    checked={this.state.isConsent}\r\n                  />\r\n                  <p\r\n                    className=\"form-check-label ml-1\"\r\n                  >\r\n                    I give my consent to the <a \r\n                    itemType='button' \r\n                    className='text-info'\r\n                    data-toggle=\"modal\"\r\n                    data-target='#consent-modal'\r\n                    onClick={() => {\r\n                        setTimeout(\r\n                            () => document.getElementsByClassName('modal-backdrop')[0]?.addEventListener(\"click\", e => (e.target as HTMLDivElement).remove()),\r\n                            2000);\r\n                        }\r\n                        }>terms of\r\n                    service</a>\r\n                  </p>\r\n                </div>\r\n                  <Button type='submit' className=\"btn btn-primary col-md-12 mt-5\">Submit</Button>\r\n                  <hr />\r\n                  <Button className=\"btn btn-secondary col-md-12\">\r\n                    Sign in\r\n                  </Button>\r\n              </Stack>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default RegisterForm;","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\LoginForm.tsx",["74"],[],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Button, Stack } from 'react-bootstrap';\r\nimport { LoginDto, User, AuthenticationResponse, UserDetail} from '../types/UserTypes';\r\nimport { useForm } from '../hooks/UseForm'; \r\nimport { AppStore, client, useAppDispatch } from '../state/AppStore';\r\nimport UserSlice, { signIn, Authenticate } from '../slices/UserSlice';\r\n\r\nfunction LoginForm() {\r\n  \r\n  const initialState : LoginDto = {login: \"\", password: \"\", forgotPassword: false};\r\n\r\n  const { onChange, onSubmit, values } = useForm(\r\n    loginCallback,\r\n    initialState\r\n  );\r\n\r\n  async function loginCallback() \r\n  {\r\n    //var response = () => Authenticate(values as LoginDto);\r\n    var authAction = await AppStore.dispatch(Authenticate(values as LoginDto));\r\n    \r\n    \r\n    if(response.status === 200)\r\n    {\r\n      const authResponse : AuthenticationResponse = await response.data.json();\r\n      var userResponse = await client.get(`/user/${authResponse.id}`);\r\n      const user : User = await userResponse.data.json();\r\n      const dispatch = useAppDispatch();\r\n      useEffect(() => dispatch(() => {token})))\r\n    }\r\n  };\r\n\r\n  return(\r\n             <div id=\"login-form\" className=\"d-flex justify-content-center\">\r\n               <form \r\n               onSubmit={onSubmit}\r\n               className=\"border rounded border-primary mt-3\">\r\n                 <Stack gap={0} direction=\"horizontal\" className=\"m-5\">\r\n                   <h1 className=\"d-flex justify-content-center\">Sign in</h1>\r\n                   <hr />\r\n                   <input\r\n                     type=\"text\"\r\n                     className=\"form-control\"\r\n                     id=\"login\"\r\n                     placeholder=\"Login\"\r\n                     required\r\n                     name = \"login\"\r\n                     onChange={onChange}\r\n                   />\r\n                   <br />\r\n                   <input\r\n                     type=\"password\"\r\n                     className=\"form-control\"\r\n                     id=\"password\"\r\n                     placeholder=\"Password\"\r\n                     name=\"password\"\r\n                     onChange={onChange}\r\n                   />\r\n                   <div className=\"form-check mt-2\">\r\n                     <input\r\n                       className=\"form-check-input\"\r\n                       type=\"checkbox\"\r\n                       name=\"forgotPassword\"\r\n                       id=\"forgotPassword\"\r\n                       onChange={onChange}\r\n                     />\r\n                     <label\r\n                       className=\"form-check-label mb-5\"\r\n                       htmlFor=\"login-forgot-password\"\r\n                     >\r\n                       Forgot password?\r\n                     </label>\r\n                   </div>\r\n                   <Button className='btn btn-primary col-md-12' type=\"submit\">\r\n                        Submit\r\n                   </Button>\r\n                   <hr/>\r\n                   <Button onClick={} className='btn btn-secondary col-md-12'>\r\n                        Sign up for free\r\n                   </Button>\r\n                 </Stack>\r\n               </form>\r\n             </div>\r\n           );\r\n       };\r\n\r\nexport default LoginForm;","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\components\\LegalViewer.tsx",["75","76","77","78","79","80","81","82"],[],"import { stringify } from 'querystring';\r\nimport * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { Document, Page  } from 'react-pdf'\r\nimport { JsxElement } from 'typescript';\r\n\r\ninterface LegalViewerProps {\r\n    consentGiven: boolean\r\n}\r\n \r\ninterface LegalViewerState {\r\n    consentGiven: boolean\r\n}\r\n \r\nclass LegalViewer extends React.Component<LegalViewerProps, LegalViewerState> {\r\n    constructor(props: LegalViewerProps) {\r\n        super(props);\r\n        this.state = {consentGiven: props.consentGiven };\r\n    };\r\n    render() {\r\n        //let vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        //let vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n        //let staticHeight = (vh*0.8).toString() + \"px\";\r\n        return (\r\n          <div className=\"modal align-content-stretch\" id=\"consent-modal\" tabIndex={-1} role=\"dialog\" align-content=\"center\"> \r\n            <div className='' role=\"document\">\r\n              <div className=\"modal-content d-flex justify-content-center col-md-12\" align-content=\"center\">\r\n                <div className=\"modal-header justify-content-center\">\r\n                  <h5 className=\"modal-title justify-content-center\">Terms of service</h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body col-md-12 justify-content-center\" align-content={\"center\"} >\r\n                    <object className=\"col-md-12 justify-content-center\" align-content={\"center\"} data='https://www.fleetster.net/legal/standard-terms-and-conditions.pdf' type='application/pdf'>\r\n                        <iframe src=\"https://docs.google.com/viewer?https://www.fleetster.net/legal/standard-terms-and-conditions.pdf&embedded=true\"/>\r\n                    </object>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => {\r\n                      let checkbox = document.getElementById(\"register-consent\");\r\n                      if (!(checkbox as HTMLInputElement)?.checked) {\r\n                        checkbox?.click();\r\n                      }\r\n                    }}\r\n                  >\r\n                    I Agree\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default LegalViewer;","C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\state\\AppStore.tsx",["83","84","85","86"],[],"C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\slices\\UserSlice.tsx",["87","88","89","90","91","92"],[],"C:\\dev\\Scrabex\\ConfigPortal_react\\portal-react-ts\\src\\hooks\\UseForm.tsx",[],[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":16},{"ruleId":"97","severity":1,"message":"102","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":16},{"ruleId":"97","severity":1,"message":"103","line":2,"column":18,"nodeType":"99","messageId":"100","endLine":2,"endColumn":21},{"ruleId":"97","severity":1,"message":"104","line":2,"column":23,"nodeType":"99","messageId":"100","endLine":2,"endColumn":30},{"ruleId":"97","severity":1,"message":"105","line":2,"column":32,"nodeType":"99","messageId":"100","endLine":2,"endColumn":40},{"ruleId":"97","severity":1,"message":"101","line":2,"column":42,"nodeType":"99","messageId":"100","endLine":2,"endColumn":48},{"ruleId":"97","severity":1,"message":"106","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":19},{"ruleId":"97","severity":1,"message":"107","line":6,"column":42,"nodeType":"99","messageId":"100","endLine":6,"endColumn":48},{"ruleId":null,"fatal":true,"severity":2,"message":"108","line":33,"column":13},{"ruleId":null,"fatal":true,"severity":2,"message":"108","line":29,"column":46},{"ruleId":"97","severity":1,"message":"109","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":16},{"ruleId":"97","severity":1,"message":"110","line":4,"column":18,"nodeType":"99","messageId":"100","endLine":4,"endColumn":23},{"ruleId":"97","severity":1,"message":"111","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":18},{"ruleId":"97","severity":1,"message":"112","line":5,"column":20,"nodeType":"99","messageId":"100","endLine":5,"endColumn":24},{"ruleId":"97","severity":1,"message":"113","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":42,"column":25,"nodeType":"116","endLine":42,"endColumn":151},{"ruleId":"97","severity":1,"message":"117","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":13},{"ruleId":"97","severity":1,"message":"118","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":21},{"ruleId":"97","severity":1,"message":"119","line":6,"column":23,"nodeType":"99","messageId":"100","endLine":6,"endColumn":38},{"ruleId":"97","severity":1,"message":"120","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":23},{"ruleId":"97","severity":1,"message":"121","line":1,"column":38,"nodeType":"99","messageId":"100","endLine":1,"endColumn":50},{"ruleId":"97","severity":1,"message":"122","line":1,"column":52,"nodeType":"99","messageId":"100","endLine":1,"endColumn":68},{"ruleId":"97","severity":1,"message":"123","line":2,"column":13,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"124","line":3,"column":16,"nodeType":"99","messageId":"100","endLine":3,"endColumn":24},{"ruleId":"97","severity":1,"message":"106","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":19},{"ruleId":"125","severity":2,"message":"126","line":29,"column":13,"nodeType":"127","messageId":"128","endLine":29,"endColumn":30},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavProps' is defined but never used.","'RootState' is defined but never used.","'Router' is defined but never used.","Parsing error: ';' expected.","'stringify' is defined but never used.","'Modal' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'JsxElement' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'thunk' is defined but never used.","'createStore' is defined but never used.","'applyMiddleware' is defined but never used.","'axiosMiddleware' is defined but never used.","'createAction' is defined but never used.","'createAsyncThunk' is defined but never used.","'React' is defined but never used.","'LoginDto' is defined but never used.","@typescript-eslint/no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-global-assign","no-unsafe-negation"]